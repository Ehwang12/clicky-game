{"map":"{\"version\":3,\"sources\":[\"/Users/ehwang/Documents/codingBootcamp/homeworks/clicky-game/src/components/Card/Card.js\",\"/Users/ehwang/Documents/codingBootcamp/homeworks/clicky-game/src/components/Header/Header.js\",\"/Users/ehwang/Documents/codingBootcamp/homeworks/clicky-game/src/components/Wrapper/Wrapper.js\",\"/Users/ehwang/Documents/codingBootcamp/homeworks/clicky-game/src/App.js\",\"/Users/ehwang/Documents/codingBootcamp/homeworks/clicky-game/src/serviceWorker.js\",\"/Users/ehwang/Documents/codingBootcamp/homeworks/clicky-game/src/index.js\"],\"names\":[\"Card\",\"props\",\"react_default\",\"a\",\"createElement\",\"className\",\"src\",\"imgUrl\",\"alt\",\"name\",\"onClick\",\"console\",\"log\",\"Header\",\"border\",\"React\",\"Component\",\"Wrapper\",\"children\",\"App\",\"state\",\"characters\",\"Score\",\"Wins\",\"clicked\",\"components_Header_Header\",\"score\",\"this\",\"wins\",\"Wrapper_Wrapper\",\"map\",\"image\",\"Card_Card\",\"key\",\"id\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"28DAmBeA,IAAAA,EAhBf,SAAcC,GAEV,OACIC,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,iCACXH,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,WACfC,IAAKL,EAAMM,OACXC,IAAKP,EAAMQ,KACXC,QAAS,WAAA,OAAMC,QAAQC,IAAI,6BCgB5BC,0LArBX,OACEX,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,6BAGXH,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,cAAcC,IAAI,6EAA6EE,IAAI,6BAA6BM,OAAO,MAItJZ,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,2BAA2BC,IAAI,6EAA6EE,IAAI,6BAA6BM,OAAO,MACjKZ,EAAAC,EAAAC,cAAA,OAAA,CAAMC,UAAU,aAAhB,KAGFH,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,2BAA2BC,IAAI,6EAA6EE,IAAI,6BAA6BM,OAAO,MACjKZ,EAAAC,EAAAC,cAAA,OAAA,CAAMC,UAAU,aAAhB,aAhBSU,EAAAA,EAAMC,mBCSZC,IAAAA,EAVf,SAAiBhB,GAET,OACIC,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,6BACVJ,EAAMiB,WCsERC,6MA7DbC,MAAQ,CACNC,WAAAA,EACAC,MAAO,EACPC,KAAM,EACNC,QAAS,4EA8BT,OACEtB,EAAAC,EAAAC,cAAA,MAAA,KACEF,EAAAC,EAAAC,cAACqB,EAAD,CACEC,MAAOC,KAAKP,MAAMM,MAClBE,KAAMD,KAAKP,MAAMQ,OAInB1B,EAAAC,EAAAC,cAACyB,EAAD,KACA3B,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,OACZsB,KAAKP,MAAMC,WAAWS,IAAI,SAAAC,GAAK,OAC9B7B,EAAAC,EAAAC,cAAC4B,EAAD,CACEC,IAAKF,EAAMG,GACXA,GAAIH,EAAMG,GACVzB,KAAMsB,EAAMtB,KACZF,OAAQwB,EAAMA,oBAnDVhB,EAAAA,EAAMC,WCDJmB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,EAAAA,EAASC,OAAOvC,EAAAC,EAAAC,cAACsC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC\",\"sourcesContent\":[\"import React from 'react'\\nimport './style.css';\\n\\nfunction Card(props) {\\n\\n    return (\\n        <div className=\\\"col-3\\\">\\n            <div className=\\\"card hoverable z-depth-1-half\\\">\\n                <img className=\\\"card-img\\\" \\n                src={props.imgUrl} \\n                alt={props.name} \\n                onClick={() => console.log(\\\"this is a nightmare\\\")}/>\\n            </div>\\n        </div>\\n\\n    )\\n \\n}\\n\\nexport default Card;\\n\",\"import React from \\\"react\\\";\\nimport '../Header/style.css';\\n\\nclass Header extends React.Component {\\n  \\n  render() {\\n    return (\\n      <nav className=\\\"navbar navbar-dark indigo\\\">\\n        \\n          {/* title */}\\n          <img className=\\\"clicky-font\\\" src=\\\"https://fontmeme.com/permalink/190622/9abb645554248ae6a5b12de539fa6da3.png\\\" alt=\\\"the-lord-of-the-rings-font\\\" border=\\\"0\\\" /> \\n          \\n\\n          {/* Wins */}\\n          <img className=\\\"clicky-score float-right\\\" src=\\\"https://fontmeme.com/permalink/190622/83572698e4378165114334818cf914fb.png\\\" alt=\\\"the-lord-of-the-rings-font\\\" border=\\\"0\\\"/>\\n            <span className=\\\"score-num\\\">0</span>\\n\\n          {/* Score */}\\n          <img className=\\\"clicky-score float-right\\\" src=\\\"https://fontmeme.com/permalink/190622/588eeea596e512563e99cf4c7509eb63.png\\\" alt=\\\"the-lord-of-the-rings-font\\\" border=\\\"0\\\"/>\\n            <span className=\\\"score-num\\\">0</span>\\n          \\n        \\n      </nav>\\n    );\\n  }\\n}\\n\\nexport default Header;\\n\",\"import React from 'react'\\n\\nfunction Wrapper(props) {\\n    \\n        return (\\n            <div className=\\\"container container-fluid\\\">\\n                {props.children}\\n            </div>\\n        )\\n    \\n}\\n\\nexport default Wrapper\\n\",\"import React from 'react';\\n// components\\nimport Card from './components/Card/Card';\\nimport Header from './components/Header/Header';\\n// array for images\\nimport characters from './JSON/arrayOne';\\n\\nimport Wrapper from './components/Wrapper/Wrapper';\\n\\n// function arrayShuffler()\\n  //function that shuffles the JSON object array \\n    //returns shuffled array\\n\\nclass App extends React.Component {\\n  \\n  state = {\\n    characters,\\n    Score: 0,\\n    Wins: 0,\\n    clicked: []\\n  }\\n  \\n  // clickHandler function\\n    //if image is clicked and it is not in initial clicked array\\n      //increase current score\\n      //increase wins by 1\\n      //set state of clicked array to new array that has clicked image\\n    //else\\n      //gameReset function is called\\n\\n  // shuffleArray function\\n    //create variable that contains arrayShuffler(characters)\\n    //set state to new shuffled characters array\\n  \\n  // handleIncrement function\\n    //const newScore = this.state.currentScore + 1;\\n    //set state of score with newScore\\n  \\n  // gameReset function\\n    //function that resets game variables\\n    //this.setState = {\\n    //   characters,\\n    //   Score: 0,\\n    //   Wins: 0,\\n    //   clicked: []\\n    // }\\n  \\n  \\n  render() {\\n    return (\\n      <div>\\n        <Header \\n          score={this.state.score}\\n          wins={this.state.wins}\\n        /> \\n        {/* <Jumbotron /> */}\\n      \\n        <Wrapper>\\n        <div className=\\\"row\\\">\\n          {this.state.characters.map(image => (\\n            <Card \\n              key={image.id}\\n              id={image.id}\\n              name={image.name}\\n              imgUrl={image.image}\\n            />\\n          ))}\\n        </div>\\n\\n        </Wrapper>\\n      </div>\\n      );\\n  }\\n  \\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[,,,,,,,,function(e){e.exports=[{id:1,name:\"Gollum\",image:\"https://vignette.wikia.nocookie.net/villains/images/a/a3/GollumAUJTextlessPoster.jpeg/revision/latest?cb=20151020122542\"},{id:2,name:\"Aragorn\",image:\"https://www.syfy.com/sites/syfy/files/styles/1200x680/public/wire/legacy/Aragorn1.jpeg\"},{id:3,name:\"Frodo Baggins\",image:\"https://vignette.wikia.nocookie.net/p__/images/b/b4/FRODO.jpg/revision/latest?cb=20120124180422&path-prefix=protagonist\"},{id:4,name:\"Gandalf\",image:\"https://a1cf74336522e87f135f-2f21ace9a6cf0052456644b80fa06d4f.ssl.cf2.rackcdn.com/images/characters/p-the-lord-of-the-rings-ian-mckellen.jpg\"},{id:5,name:\"Legolas\",image:\"https://upload.wikimedia.org/wikipedia/en/thumb/2/2b/Legolas600ppx.jpg/220px-Legolas600ppx.jpg\"},{id:6,name:\"Sauron\",image:\"https://i.cbc.ca/1.4046471.1490819729!/fileImage/httpImage/image.jpg_gen/derivatives/16x9_780/eye-of-sauron.jpg\"},{id:7,name:\"Bilbo Baggins\",image:\"https://vignette.wikia.nocookie.net/lotr/images/6/68/Bilbo_baggins.jpg/revision/latest/scale-to-width-down/238?cb=20130202022550\"},{id:8,name:\"Gimli\",image:\"https://vignette.wikia.nocookie.net/lotr/images/e/ec/Gimli_-_FOTR.png/revision/latest?cb=20121008105956\"},{id:9,name:\"Nazgul\",image:\"https://vignette.wikia.nocookie.net/lotr/images/d/d4/The_Nazgul_Witch-King.jpg/revision/latest/scale-to-width-down/225?cb=20121224220040\"},{id:10,name:\"Sam\",image:\"https://a1cf74336522e87f135f-2f21ace9a6cf0052456644b80fa06d4f.ssl.cf2.rackcdn.com/images/characters/p-the-lord-of-the-rings-sean-astin.jpg\"},{id:11,name:\"Eowyn\",image:\"https://www.pfspublishing.com/.a/6a0133f2f53db3970b017d3f9009f2970c-600wi\"},{id:12,name:\"Merri\",image:\"http://cdn3.whatculture.com/images/2019/02/45cd886a5d5114ac-600x338.jpg\"}]},function(e,a,t){e.exports=t(18)},,,,,,function(e,a,t){},function(e,a,t){},function(e,a,t){},function(e,a,t){\"use strict\";t.r(a);var n=t(0),i=t.n(n),c=t(7),o=t.n(c),r=(t(15),t(1)),s=t(2),l=t(4),m=t(3),g=t(5);t(16);var d=function(e){return i.a.createElement(\"div\",{className:\"col-3\"},i.a.createElement(\"div\",{className:\"card hoverable z-depth-1-half\"},i.a.createElement(\"img\",{className:\"card-img\",src:e.imgUrl,alt:e.name,onClick:function(){return console.log(\"this is a nightmare\")}})))},p=(t(17),function(e){function a(){return Object(r.a)(this,a),Object(l.a)(this,Object(m.a)(a).apply(this,arguments))}return Object(g.a)(a,e),Object(s.a)(a,[{key:\"render\",value:function(){return i.a.createElement(\"nav\",{className:\"navbar navbar-dark indigo\"},i.a.createElement(\"img\",{className:\"clicky-font\",src:\"https://fontmeme.com/permalink/190622/9abb645554248ae6a5b12de539fa6da3.png\",alt:\"the-lord-of-the-rings-font\",border:\"0\"}),i.a.createElement(\"img\",{className:\"clicky-score float-right\",src:\"https://fontmeme.com/permalink/190622/83572698e4378165114334818cf914fb.png\",alt:\"the-lord-of-the-rings-font\",border:\"0\"}),i.a.createElement(\"span\",{className:\"score-num\"},\"0\"),i.a.createElement(\"img\",{className:\"clicky-score float-right\",src:\"https://fontmeme.com/permalink/190622/588eeea596e512563e99cf4c7509eb63.png\",alt:\"the-lord-of-the-rings-font\",border:\"0\"}),i.a.createElement(\"span\",{className:\"score-num\"},\"0\"))}}]),a}(i.a.Component)),f=t(8);var h=function(e){return i.a.createElement(\"div\",{className:\"container container-fluid\"},e.children)},u=function(e){function a(){var e,t;Object(r.a)(this,a);for(var n=arguments.length,i=new Array(n),c=0;c<n;c++)i[c]=arguments[c];return(t=Object(l.a)(this,(e=Object(m.a)(a)).call.apply(e,[this].concat(i)))).state={characters:f,Score:0,Wins:0,clicked:[]},t}return Object(g.a)(a,e),Object(s.a)(a,[{key:\"render\",value:function(){return i.a.createElement(\"div\",null,i.a.createElement(p,{score:this.state.score,wins:this.state.wins}),i.a.createElement(h,null,i.a.createElement(\"div\",{className:\"row\"},this.state.characters.map(function(e){return i.a.createElement(d,{key:e.id,id:e.id,name:e.name,imgUrl:e.image})}))))}}]),a}(i.a.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));o.a.render(i.a.createElement(u,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}],[[9,1,2]]]);","extractedComments":[]}